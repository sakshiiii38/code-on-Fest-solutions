vector<int> Solution::spiralOrder(const vector<vector<int> > &A) {
   vector<int>ans;
    int m = A[0].size();
    int n = A.size();
    int top =0, down =n-1 , left = 0 , right = m-1;
    int d =0;
    while(top<=down && left<=right){
        if(d==0){
            for(int i=left ;i<=right;i++){
                ans.push_back(A[top][i]);
            }
            top+=1;
        }
        else if(d==1){
            for(int i=top;i<=down;i++){
                ans.push_back(A[i][right]);
            }
            right=right-1;
        }
        else if(d==2){
            for(int i=right;i>=left;i--){
                ans.push_back(A[down][i]);
            }
            down = down-1;
        }
        else if(d==3){
            for(int i=down ; i>=top;i--){
                ans.push_back(A[i][left]);
            }
            left=left+1;
        }
        d = (d+1)%4;
    }
    return ans;
}
